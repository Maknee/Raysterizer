// The MIT License (MIT)
//
// Copyright (c) 2019,2020 The Raygun Authors.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal in the Software without restriction, including without limitation the
// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
// sell copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
// IN THE SOFTWARE.

#version 460
#extension GL_GOOGLE_include_directive : enable

#include "compute.h"

void main()
{
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    vec4 base = imageLoad(baseImage, pos);
    vec4 rough = imageLoad(roughColorsA, pos);
    vec3 col = clamp(mix(base.rgb, rough.rgb, base.a), 0, 1);
    float luma = dot(col.rgb, vec3(0.299, 0.587, 0.114)); // for FXAA

    // fade postprocessing
    col = mix(col, ubo.fadeColor.rgb, ubo.fadeColor.a);

    imageStore(finalImage, pos, vec4(col, luma));

    if(ubo.showAlpha) {
        imageStore(finalImage, pos, imageLoad(finalImage, pos).aaaa);
        imageStore(normalImage, pos, imageLoad(normalImage, pos).aaaa);
        imageStore(roughImage, pos, imageLoad(roughImage, pos).aaaa);
        imageStore(baseImage, pos, imageLoad(baseImage, pos).aaaa);
        imageStore(roughTransitions, pos, imageLoad(roughTransitions, pos).aaaa);
        imageStore(roughColorsA, pos, imageLoad(roughColorsA, pos).aaaa);
        imageStore(roughColorsB, pos, imageLoad(roughColorsB, pos).aaaa);
    }
}
